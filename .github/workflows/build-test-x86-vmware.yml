#=================================================
# Description: Repack IMG.GZ image to VMDK image with GitHub Actions
# Lisence: MIT
# Author: Helmi Amirudin
# Blog: https://helmiau.com
#=================================================

name: Test Build x86 VMWare

on:
  workflow_dispatch:
#  schedule:
#    - cron: 0 17 * * *
#  watch:
#    types: started

# https://github.com/helmiau/HelmiWrt-OS/releases/download/helmiwrt-2021.10.30/helmiwrt-x86-64-generic-squashfs-combined-efi.img.gz
# https://github.com/helmiau/HelmiWrt-OS/releases/download/helmiwrt-2021.10.30/helmiwrt-x86-64-generic-squashfs-combined.img.gz
# https://github.com/helmiau/HelmiWrt-OS/releases/download/helmiwrt-2021.10.30/helmiwrt-x86-generic-generic-squashfs-combined-efi.img.gz
# https://github.com/helmiau/HelmiWrt-OS/releases/download/helmiwrt-2021.10.30/helmiwrt-x86-generic-generic-squashfs-combined.img.gz

jobs:
  release:
    name: Generating ${{ matrix.name }}-${{ matrix.partition }}-${{ matrix.bootloader }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: generic
            partition: squashfs
            bootloader: combined
          - name: generic
            partition: squashfs
            bootloader: combined-efi
          #- name: 64
          #  partition: squashfs
          #  bootloader: combined
          #- name: 64
          #  partition: squashfs
          #  bootloader: combined-efi
          #- name: generic
          #  partition: ext4
          #  bootloader: combined
          #- name: generic
          #  partition: ext4
          #  bootloader: combined-efi
          #- name: 64
          #  partition: ext4
          #  bootloader: combined
          #- name: 64
          #  partition: ext4
          #  bootloader: combined-efi

    env:
      HELMIWRT_REL: https://github.com/helmiau/HelmiWrt-OS/releases/latest/download
      HELMIWRT_GZNAME: helmiwrt-x86-${{ matrix.name }}-generic-${{ matrix.partition }}-${{ matrix.bootloader }}.img.gz
      HELMIWRT_IMGNAME: helmiwrt-x86-${{ matrix.name }}-generic-${{ matrix.partition }}-${{ matrix.bootloader }}.img
      HELMIWRT_VMDKNAME: helmiwrt-x86-${{ matrix.name }}-generic-${{ matrix.partition }}-${{ matrix.bootloader }}.vmdk
 
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install qemu qemu-utils zip unzip gzip wget
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo ln -sf /usr/share/zoneinfo/Asia/Jakarta /etc/localtime
        
      - name: Generate ${{ matrix.name }}-${{ matrix.partition }}-${{ matrix.bootloader }} vmdk image file
        id: download
        run: |
          df -hT $PWD
          mkdir openwrt
          cd openwrt
          if wget -S --spider $HELMIWRT_REL/$HELMIWRT_GZNAME 2>&1 | grep -q 'HTTP/1.1 200 OK'; then
            wget $HELMIWRT_REL/$HELMIWRT_GZNAME
            ls -R
            gunzip $HELMIWRT_GZNAME
            ls -R
            qemu-img -h
            qemu-img connect -f raw -O vmdk $HELMIWRT_IMGNAME $HELMIWRT_VMDKNAME
            ls -R
            echo "RELEASE_NAME=HelmiWrt-VMDK" >> $GITHUB_ENV
            echo "TAG_NAME=helmiwrt-vmdk" >> $GITHUB_ENV
          else
            exit 1
          fi
          echo "::set-output name=COMPILE_STATUS::success"
